---
title: 'Calculating L, A, E'
author: "David Dorr and Ted Laderas"
date: "August 18, 2016"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#Identifying Appropriate Algorithms to Predict Readmission Risk

**Purpose**:  To identify potential requirements for measuring readmissions and predicting readmission risk, and to map these from source data warehouse data.

**Background**:  Several algorithms have been created to predict readmission risk. The LACE and Amarasingham papers are provided as prototypical examples of these algorithms.  An optional paper by Kansagara et al. highlights the overall performance of these algorithms.

**Deliverables**:  
1) First 20 lines of your table with L,A, and E scores
2) The code you used to generate the scores

## Suggested Steps:     

1) Store all the data frames into a database in R, if you haven't; otherwise, load the data set / database. You can also start with the analytic table in `data/analytic.csv`. If you use your own table, please make sure to subset the data so that `indexadmit` == 1 to get started.

2) For the L Score, add to your analytic table that you started in your prework to calculate `Length_of_stay` and whether this was an admission from the ED.  Recode the `Length_of_stay` into the Lace Version.

3) For the A score, you need to identify patients in `patient_encounter_hosp` that have been admitted through the Emergency Room. Recode these patients according to the LACE specification.

4) Look in `patient_encounter` to find ED visits.  You may find the code file `t_encounter_type` useful.  Count the ED visits (in aggregate) per admission; recode the visits number into the LACE specification.

5) Add these variables to your data dictionary (if you want).

6) Advanced: add more data points from the other files into your analytic file from other algorithms.

## Working Together in Teams

- You are all paired as Bioinformatics/Clinical teams. Working together is key.
- Both Bio/Clinical people have insights to share with the other. 
- You can submit separate notebooks for these problem sets, or submit the same ones. 
- Your team is responsible for presenting together for the final presentations.

## PLEASE NOTE

I will not accept assignments that are full tidyverse. The point of this course is to learn SQL and show that you can do work with it. 